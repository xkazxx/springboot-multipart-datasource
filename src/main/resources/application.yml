server:
  port: 8080

spring:
  datasource:
    dynamic:
      primary: master #设置默认的数据源或者数据源组,默认值即为master
      strict: true #严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源
      datasource:
        master:
          # url: jdbc:mysql://127.0.0.1:3306/community?characterEncoding=utf8&useUnicode=true&useSSL=false&serverTimezone=GMT%2B8
          url: jdbc:mysql://127.0.0.1:3306/typicalcase?characterEncoding=utf8&useUnicode=true&useSSL=false&serverTimezone=GMT%2B8
          driverClassName: com.mysql.cj.jdbc.Driver
          username: root
          password: 1234
        slaver_1:
          url: jdbc:mysql://rm-2zeux351af396rmbsuo.mysql.rds.aliyuncs.com:3306/community?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true
          driverClassName: com.mysql.cj.jdbc.Driver
          username: root
          password: Test@2020
        slaver_2:
          url: jdbc:mysql://127.0.0.1:3306/community?characterEncoding=utf8&useUnicode=true&useSSL=false&serverTimezone=GMT%2B8
          driverClassName: com.mysql.cj.jdbc.Driver
          username: root
          password: 1234
      #以上会配置一个默认库master，一个组slave下有两个子库slave_1,slave_2

      druid:
        initial-size: 1
        max-active: 20
        min-idle: 1
        max-wait: 60000

    # DruidDataSourceAutoConfigure会注入一个DataSourceWrapper，会在原生的spring.datasource下找url,username,password等。
    # 排除方式有两种，配置文件排除，还有一种可以在项目启动类排除：@SpringBootApplication(exclude = DruidDataSourceAutoConfigure.class)
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure # 去除druid配置
